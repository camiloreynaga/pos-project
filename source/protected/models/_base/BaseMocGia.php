<?php

/**
 * This is the model base class for the table "tbl_MocGia".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MocGia".
 *
 * Columns in table "tbl_MocGia" available as properties of the model,
 * followed by relations of table "tbl_MocGia" available as properties of the model.
 *
 * @property integer $id
 * @property string $thoi_gian_bat_dau
 * @property double $gia_ban
 * @property integer $san_pham_id
 *
 * @property SanPham $sanPham
 */
abstract class BaseMocGia extends CPOSActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_MocGia';
	}

	public static function label($n = 1) {
        if($n <= 1 ) {
            return Yii::t('viLib', 'MocGia');
        } else {
		    return Yii::t('viLib', 'MocGias');
        }
	}

	public static function representingColumn() {
		return 'thoi_gian_bat_dau';
	}

	public function rules() {
		return array(
			array('thoi_gian_bat_dau, gia_ban, san_pham_id', 'required'),
			array('san_pham_id', 'numerical', 'integerOnly'=>true),
			array('gia_ban', 'numerical'),
			array('id, thoi_gian_bat_dau, gia_ban, san_pham_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'sanPham' => array(self::BELONGS_TO, 'SanPham', 'san_pham_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('viLib', 'ID'),
			'thoi_gian_bat_dau' => Yii::t('viLib', 'Thoi Gian Bat Dau'),
			'gia_ban' => Yii::t('viLib', 'Gia Ban'),
			'san_pham_id' => null,
			'sanPham' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('thoi_gian_bat_dau', $this->thoi_gian_bat_dau, true);
		$criteria->compare('gia_ban', $this->gia_ban);
		$criteria->compare('san_pham_id', $this->san_pham_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}