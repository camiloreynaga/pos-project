<?php

/**
 * This is the model base class for the table "tbl_SanPhamTang".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "SanPhamTang".
 *
 * Columns in table "tbl_SanPhamTang" available as properties of the model,
 * followed by relations of table "tbl_SanPhamTang" available as properties of the model.
 *
 * @property integer $id
 * @property string $ma_vach
 * @property string $ten_san_pham
 * @property string $mo_ta
 *
 * @property ChiNhanh[] $tblChiNhanhs
 */
abstract class BaseSanPhamTang extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_SanPhamTang';
	}

	public static function label($n = 1) {
        if($n <= 1 ) {
            return Yii::t('viLib', 'SanPhamTang');
        } else {
		    return Yii::t('viLib', 'SanPhamTangs');
        }
	}

	public static function representingColumn() {
		return 'ma_vach';
	}

	public function rules() {
		return array(
			array('ma_vach', 'required'),
			array('ma_vach', 'length', 'max'=>15),
			array('ten_san_pham', 'length', 'max'=>100),
			array('mo_ta', 'safe'),
			array('ten_san_pham, mo_ta', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, ma_vach, ten_san_pham, mo_ta', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'tblChiNhanhs' => array(self::MANY_MANY, 'ChiNhanh', 'tbl_SanPhamTangChiNhanh(san_pham_tang_id, chi_nhanh_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'tblChiNhanhs' => 'SanPhamTangChiNhanh',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'ma_vach' => Yii::t('app', 'Ma Vach'),
			'ten_san_pham' => Yii::t('app', 'Ten San Pham'),
			'mo_ta' => Yii::t('app', 'Mo Ta'),
			'tblChiNhanhs' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('ma_vach', $this->ma_vach, true);
		$criteria->compare('ten_san_pham', $this->ten_san_pham, true);
		$criteria->compare('mo_ta', $this->mo_ta, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}